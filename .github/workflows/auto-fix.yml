name: Auto-fix with claude-yolt

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to fix'
        required: true

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  auto-fix:
    runs-on: ubuntu-latest
    # Only run if comment contains "/fix" or manual trigger
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/fix')) ||
      github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install claude-yolt
      run: npm install -g .

    - name: Configure Claude
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        mkdir -p ~/.config/@anthropic-ai/claude-code
        echo "{\"apiKey\": \"$ANTHROPIC_API_KEY\"}" > ~/.config/@anthropic-ai/claude-code/config.json

    - name: Get Issue Details
      id: issue
      run: |
        if [ "${{ github.event_name }}" == "issue_comment" ]; then
          ISSUE_NUMBER="${{ github.event.issue.number }}"
        else
          ISSUE_NUMBER="${{ github.event.inputs.issue_number }}"
        fi
        
        # Get issue details
        gh issue view $ISSUE_NUMBER --json title,body,labels > issue.json
        
        echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
        echo "issue_title=$(jq -r .title issue.json)" >> $GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Attempt Fix with claude-yolt
      env:
        CLAUDE_MAX_PROCESSES: "50"
      run: |
        # Read issue details
        ISSUE_TITLE=$(jq -r .title issue.json)
        ISSUE_BODY=$(jq -r .body issue.json)
        
        # Create fix branch
        BRANCH_NAME="fix/issue-${{ steps.issue.outputs.issue_number }}"
        git checkout -b $BRANCH_NAME
        
        # Use claude-yolt to implement fix
        FIX_OUTPUT=$(claude-yolt "Fix the following issue in claude-yolt:
        
        Issue #${{ steps.issue.outputs.issue_number }}: $ISSUE_TITLE
        
        Description:
        $ISSUE_BODY
        
        Please:
        1. Identify the files that need changes
        2. Implement the fix
        3. Explain what you changed
        
        Remember this is claude-yolt, a tool that fixes process explosion bugs." 2>&1)
        
        echo "$FIX_OUTPUT" > fix-output.txt
        
        # Check if any files were changed
        if git diff --quiet; then
          echo "No changes were made"
          gh issue comment ${{ steps.issue.outputs.issue_number }} \
            --body "🤖 I analyzed the issue but couldn't determine the necessary changes.
            
            Analysis output:
            \`\`\`
            $(cat fix-output.txt | head -20)
            \`\`\`"
          exit 0
        fi
        
        # Commit changes
        git add -A
        git commit -m "Fix #${{ steps.issue.outputs.issue_number }}: $ISSUE_TITLE
        
        Automated fix generated by claude-yolt
        
        $(echo "$FIX_OUTPUT" | grep -E "(Fixed|Changed|Updated)" | head -5)"
        
        # Push branch
        git push origin $BRANCH_NAME
        
        # Create PR
        gh pr create \
          --title "Fix #${{ steps.issue.outputs.issue_number }}: $ISSUE_TITLE" \
          --body "## 🤖 Automated Fix
          
          This PR was automatically generated by claude-yolt to fix #${{ steps.issue.outputs.issue_number }}
          
          ### Changes made:
          \`\`\`
          $(git diff --stat origin/main)
          \`\`\`
          
          ### claude-yolt output:
          <details>
          <summary>Click to expand</summary>
          
          \`\`\`
          $(cat fix-output.txt)
          \`\`\`
          </details>
          
          ---
          ⚠️ **Please review carefully** - this is an automated fix generated by AI" \
          --label "automated-fix"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-yolt-limits:
    runs-on: ubuntu-latest
    name: Test Process Limits
    steps:
    - uses: actions/checkout@v4
    
    - name: Install claude-yolt
      run: |
        npm install -g .
        
    - name: Test Extreme Process Limiting
      run: |
        # Test with extremely low limits
        export CLAUDE_MAX_PROCESSES=5
        export CLAUDE_PROCESS_DELAY=500
        
        # Create a test prompt that would normally explode
        echo "Testing process limits with max=5..."
        
        # This would normally spawn hundreds of processes
        timeout 30 claude-yolt "search for all JavaScript files and analyze them" 2>&1 | tee test-output.txt || true
        
        # Count how many processes were actually spawned
        echo "Checking process behavior..."
        grep -c "spawn" test-output.txt || echo "No spawn calls logged"
        
        # Verify we're still alive
        echo "✅ System survived with extreme process limits!"