#!/usr/bin/env node

import { findClaudeInstallation, modifyClaudeForYolo, checkForClaudeUpdates, activateYoloMode } from '../lib/yolo.js';
import { checkFirstRunConsent } from '../lib/consent.js';
import fs from 'fs';
import path from 'path';

// ANSI color codes
const RED = '\x1b[31m';
const YELLOW = '\x1b[33m';
const CYAN = '\x1b[36m';
const RESET = '\x1b[0m';
const BOLD = '\x1b[1m';

// Main
async function main() {
  try {
    // Check consent (using same consent as claude-yolt since it's the same warning)
    const consentPath = path.join(process.env.HOME, '.claude-yolt', 'consent.json');
    const hasConsent = await checkFirstRunConsent(consentPath);
    if (!hasConsent) {
      process.exit(1);
    }
    
    // Check for updates
    await checkForClaudeUpdates();
    
    // Find Claude installation
    const { claudeDir, originalCliPath, yoloCliPath, isLocal } = findClaudeInstallation();
    
    // Create modified CLI if needed
    if (!fs.existsSync(yoloCliPath)) {
      modifyClaudeForYolo(originalCliPath, yoloCliPath, isLocal);
    }
    
    // Show YOLO message
    console.log(`${YELLOW}ðŸ”¥ YOLO MODE ACTIVATED ðŸ”¥${RESET}`);
    
    // Pass all args to modified CLI
    process.argv.splice(2, 0, '--dangerously-skip-permissions');
    
    // Import and run the modified CLI
    await import(yoloCliPath);
  } catch (error) {
    console.error(`${RED}Error: ${error.message}${RESET}`);
    process.exit(1);
  }
}

main();